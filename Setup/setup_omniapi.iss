; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "BasicApi"
#define MyAppVersion GetFileVersion('\BasicApi\BasicApi.dll')
#define MyAppPublisher "Contini Software LTDA"
#define MyAppURL "https://localhost:8080/"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1372F501-7AED-4DD0-8F4C-212EA7B73A06}
AppName={#MyAppName}   
AppVerName={#MyAppName} {#MyAppVersion}
AppVersion={#MyAppVersion}
VersionInfoVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\Program Files\{#MyAppName}
OutputDir=C:\DEV\PROJECTS\BASICAPI\SETUP
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename={#MyAppName} {#MyAppVersion}
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"

[Files]
DestDir: {app}; Flags: ignoreversion recursesubdirs; Excludes: "*.pdb"; Source: C:\BasicApi\*
DestDir: {app}; Flags: ignoreversion recursesubdirs; Excludes: "*.pdb"; Source: C:\BasicApi\*          

[Code]
function xExec(App, Params, WorkingDir: string; count: Integer): Integer;
begin
  if count = 5 then
  begin
    Result := 0;
    Exit;
  end;

  Exec(App, Params, WorkingDir, SW_HIDE, ewWaitUntilTerminated, Result);

  if Result = 100 then
    Result := xExec(App, Params, WorkingDir, count + 1);

  if (Result <> 0) and (Pos('sc.exe', App) = 0) then
    MsgBox(
      'Erro ao executar linha de comando: ' + IntToStr(Result)
      + #13#10 + 'App: ' + App
      + #13#10 + 'Parâmetros: ' + Params
      + #13#10 + 'Diretório: ' + WorkingDir
      , mbInformation
      , MB_OK
    );
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  cPATH: String;
  ResultCode: Integer;
begin
  cPATH := ExpandConstant('{app}');
  //////////////////
  // Antes
  if CurStep = ssInstall then
  begin  
    ////////////////////////////////////////////////////////////////////////////// 
    // Encerra os processos myapi.api e myapi.service usando o comando TASKKILL //
    //////////////////////////////////////////////////////////////////////////////
    Exec('taskkill', '/F /IM BasicApi.exe', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);          
    Exec('taskkill', '/F /IM svcBasicApi.exe', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
  end
  //////////////////
  ///// Depois /////
  //////////////////
  else if CurStep = ssPostInstall then
  begin 
    /////////////////////////
    // Gerenciar o serviço //   
    /////////////////////////                               
    WizardForm.StatusLabel.Caption := 'Atualizando serviços auxiliares...';

    xExec(ExpandConstant('{sys}\sc.exe'), 'delete svcBasicApi', '', 0);
    xExec(ExpandConstant('{sys}\sc.exe'), 'create svcBasicApi binPath="\"' + cPATH + '\BasicService.exe\" --runService svcBasicApi" DisplayName= "Contini Software - BasicApi Service" start=delayed-auto', '', 0);
   
    WizardForm.StatusLabel.Caption := 'Iniciando serviços...';
    xExec(ExpandConstant('{sys}\sc.exe'), 'start svcBasicApi', '', 0);
  end;
end;

[UninstallRun]
Filename: taskkill; Parameters: /F /IM BasicApi.exe; RunOnceId: KillBasicApi
Filename: taskkill; Parameters: /F /IM svcBasicApi.exe; RunOnceId: KillsvcBasicApi

Filename: {sys}\sc.exe; Parameters: delete svcBasicApi; WorkingDir: {sys}; RunOnceId: DeleteSvcBasicApi

[UninstallDelete]
Type: filesandordirs; Name: {app}

